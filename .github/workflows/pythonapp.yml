name: test

on:
  push:
    branches:
      - master
  # pull_request:
  workflow_dispatch:

concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
    cancel-in-progress: true

jobs:
  test:
    name: ${{ matrix.os }}; py ${{ matrix.python-version }}; CP2K ${{ matrix.cp2k }}; gcc ${{ matrix.gcc }}; pre-release ${{ matrix.pre_release }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]
        gcc: [7, 8, 9, 10, 11]
        cp2k: ["9.1"]
        pre_release: [false]
        include:
          # Python 3.8/3.9 tests
          # Python 3.7/3.8/3.9 tests
          - os: ubuntu-latest
            python-version: "3.7"
            gcc: 11
            cp2k: "9.1"
            pre_release: False
          - os: ubuntu-latest
            python-version: "3.8"
            gcc: 11
            cp2k: "9.1"
            pre_release: False
          - os: ubuntu-latest
            python-version: "3.9"
            gcc: 11
            cp2k: "9.1"
            pre_release: False
          # GCC 5/6 tests
          - os: ubuntu-18.04
            python-version: "3.10"
            gcc: 5
            cp2k: "9.1"
            pre_release: False
          - os: ubuntu-18.04
            python-version: "3.10"
            gcc: 6
            cp2k: "9.1"
            pre_release: False
          # CP2K 6.1/7.1/8.2 tests
          - os: ubuntu-latest
            python-version: "3.10"
            gcc: 11
            cp2k: "6.1"
            pre_release: False
          - os: ubuntu-latest
            python-version: "3.10"
            gcc: 11
            cp2k: "7.1"
            pre_release: False
          - os: ubuntu-latest
            python-version: "3.10"
            gcc: 11
            cp2k: "8.2"
            pre_release: False
          # Pre-release tests
          - os: ubuntu-latest
            python-version: "3.10"
            gcc: 11
            cp2k: "9.1"
            pre_release: True
    env:
      CP2K_DATA_DIR: /usr/share/cp2k/data

    steps:
    - uses: actions/checkout@v2

    - name: Install CP2K
      run: |
        version="${{ matrix.cp2k }}"
        version_long=v"${{ matrix.cp2k }}".0

        git clone https://github.com/cp2k/cp2k
        cd cp2k
        git checkout tags/$version_long
        ln -s data /usr/share/cp2k

        wget -nv https://github.com/cp2k/cp2k/releases/download/$version_long/cp2k-$version-Linux-x86_64.ssmp -O cp2k.ssmp
        chmod u+rx cp2k.ssmp
        mv cp2k.ssmp /usr/local/bin/cp2k.popt

    - name: Info CP2K
      run: cp2k.popt --version

    - name: Install GCC
      uses: egor-tensin/setup-gcc@v1
      with:
        version: ${{ matrix.gcc }}
        platform: x64

    - name: Info GCC
      run: gcc --version

    - name: Setup conda
      uses: s-weigand/setup-conda@v1
      with:
        update-conda: true
        conda-channels: anaconda, conda-forge

    - name: Install dependencies
      run: |
        case ${{ matrix.gcc }} in
          5|6)
            conda create -n test -c conda-forge python=${{ matrix.python-version }} boost eigen=3.3 libint==2.6.0 highfive ;;
          *)
            conda create -n test -c conda-forge python=${{ matrix.python-version }} boost eigen libint==2.6.0 highfive ;;
        esac

        source $CONDA/bin/activate test
        case "${{ matrix.pre_release }}" in
          "True")
            pip install --pre -r ./test_requirements.txt --upgrade --force-reinstall
            pip install git+https://github.com/SCM-NV/qmflows@master --upgrade
            pip install git+https://github.com/SCM-NV/PLAMS@master --upgrade
            pip install git+https://github.com/NLeSC/noodles@master --upgrade
            ;;
          *)
            pip install -r ./test_requirements.txt
            ;;
        esac

    - name: Conda info
      run: |
        source $CONDA/bin/activate test
        conda info

    - name: Conda list
      run: conda list -n test

    - name: Install the package
      run: |
        source $CONDA/bin/activate test
        pip install -e . -vvv

    - name: Test with pytest
      run: |
        source $CONDA/bin/activate test
        pytest -m "not (slow or long)"

    - name: coverage
      uses: codecov/codecov-action@v2
      with:
        file: ./coverage.xml
        name: codecov-umbrella

  Linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.10 on ubuntu-latest
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install linters
        run: pip install pydocstyle pycodestyle mypy qmflows "numpy>=1.21" types-pyyaml types-pkg_resources types-setuptools

      - name: Python info
        run: |
          which python
          python --version

      - name: Installed packages
        run: pip list

      - name: Run pycodestyle
        run: pycodestyle nanoqm test

      - name: Run pydocstyle
        run: pydocstyle nanoqm

      - name: Run mypy
        run: mypy nanoqm setup.py
        continue-on-error: true
