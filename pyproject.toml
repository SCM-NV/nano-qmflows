[build-system]
# Minimum requirements for the build system to execute.
requires = [
    'setuptools>=48.0',
    'wheel>=0.21',
    'oldest-supported-numpy',
]

[tool.mypy]
plugins = "numpy.typing.mypy_plugin"
show_error_codes = true
mypy_path = "typings"
files = ["nanoqm", "typings"]

[[tool.mypy.overrides]]
module = [
    "schema.*",
]
ignore_missing_imports = true

[tool.cibuildwheel]
build = [
    "cp38-manylinux_x86_64",
    "cp38-manylinux-aarch64",
    "cp38-macosx_x86_64",
    "cp38-macosx_arm64",
]
build-verbosity = "3"
before-all = "cp licenses/LICENSE_LIBHDF5.txt licenses/LICENSE_LIBINT2.txt ."

[tool.cibuildwheel.linux]
environment = { QMFLOWS_INCLUDEDIR="", QMFLOWS_LIBDIR="", CFLAGS="-Werror", LDFLAGS="-Wl,--strip-debug" }
manylinux-x86_64-image = "ghcr.io/nlesc-nano/manylinux2014_x86_64-qmflows:latest"
manylinux-aarch64-image = "ghcr.io/nlesc-nano/manylinux2014_aarch64-qmflows:latest"
repair-wheel-command = [
    "auditwheel -v repair -w {dest_dir} {wheel}",
    "pipx run abi3audit --strict --verbose --report {wheel}",
]

[tool.cibuildwheel.macos]
environment = { QMFLOWS_INCLUDEDIR="", QMFLOWS_LIBDIR="", LDFLAGS="-Wl", MACOSX_DEPLOYMENT_TARGET="10.14" }
repair-wheel-command = [
    "delocate-listdeps {wheel}",
    "delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}",
    "pipx run abi3audit --strict --verbose --report {wheel}",
]

[[tool.cibuildwheel.overrides]]
select = "cp38-macosx_arm64"
environment = { QMFLOWS_INCLUDEDIR="", QMFLOWS_LIBDIR="", LDFLAGS="-Wl", MACOSX_DEPLOYMENT_TARGET="11" }
